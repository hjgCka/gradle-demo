import org.example.ProcessTemplates
import org.example.TemplateEngineType

group = 'com.hjg'
version = '1.0-SNAPSHOT'

//********以下是自己编写的************

abstract class GreetingTask extends DefaultTask {

    @Input
    abstract Property<String> getGreeting()

    @Internal
    final Provider<String> message = greeting.map {it + ' from Gradle'}

    GreetingTask() {
        greeting.convention('hello from GreetingTask')
    }

    @TaskAction
    def greet() {
        println greeting.get()
        logger.quiet(message.get())
    }
}

tasks.register('hello', GreetingTask)

tasks.register('greeting', GreetingTask) {
    greeting = 'greetings from GreetingTask'
}

tasks.register('processTemplateTask', ProcessTemplates) {
    templateEngine = TemplateEngineType.FREEMARKER

    sourceFiles.from('src/main/resources/hello.txt')
    //sourceFiles = files('src/main/resources/hello.txt')

    templateData.name = 'Jack'
    templateData.variables = ['username' : 'Jackson', 'pwd' : '123456']

    outputDir = layout.buildDirectory.dir('template')
}


