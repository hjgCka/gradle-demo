plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    //从7.0开始，需要JDK11
    id 'com.bmuschko.docker-spring-boot-application' version '6.7.0'

    id 'myproject.java-conventions'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.hjg'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //添加相关测试依赖
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //implementation project(':entity')
    implementation 'com.hjg:entity:1.0-SNAPSHOT'
}

//配置docker
docker {
    url = 'tcp://10.168.55.88:2375'
}

task prepareBuildDir(type: Sync, dependsOn: bootJar) {
    def jarName = "${project.name}-${version}" + '.jar'
    //def jarPath = 'build/libs/' + jarName

    /*from ('docker/Dockerfile', jarPath)
    into 'build/docker'*/
    from layout.projectDirectory.file('docker/Dockerfile'), layout.buildDirectory.file('libs/' + jarName)
    into layout.buildDirectory.dir('docker')

    rename (jarName, 'app.jar')

    //exclude才是不再删除指定文件的配置，查看Sync文档可知
    /*preserve {
        exclude 'build/libs/app.jar'
    }*/
}

tasks.named('dockerBuildImage') {

    /*dockerFile = file('build/docker/Dockerfile')
    inputDir = file('build/docker')*/
    dockerFile = layout.buildDirectory.file('docker/Dockerfile')
    inputDir = layout.buildDirectory.dir('docker')

    //需要先亲空，否则默认镜像是 groupId/projectName:version
    images.empty()
    def version = "${project.name}" + ':' + "${version.toLowerCase()}"
    images.add(version)

    dependsOn prepareBuildDir
}

tasks.register('clearBuildDockerDir', Delete) {
    //delete 'build/docker'
    delete layout.buildDirectory.dir('docker')
}
dockerBuildImage.configure { finalizedBy clearBuildDockerDir }
